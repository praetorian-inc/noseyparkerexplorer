name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  schedule:
  # Force a run every day at 0817 UTC
  - cron: '08 17 * * *'

env:
  UV_LOCKED: "1"

jobs:
  build:
    strategy:
      fail-fast: false

      # See GitHub docs for details of available runners:
      # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#standard-github-hosted-runners-for-private-repositories
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        job:
        - name: "linux-x86_64"
          runner: "ubuntu-22.04"
          experimental: false

        - name: "linux-aarch64"
          runner: "ubuntu-22.04-arm64-8-core"
          experimental: false

        - name: "macos-x86_64"
          runner: "macos-13"
          experimental: false

        - name: "macos-aarch64"
          runner: "macos-14"
          experimental: false

    name: python${{ matrix.python-version }}-${{ matrix.job.name }}

    runs-on: ${{ matrix.job.runner }}
    continue-on-error: ${{ matrix.job.experimental }}

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install
      run: |
        uv sync --no-dev --group ci

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        uv run flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        uv run flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check with mypy
      run: |
        uv run mypy src

    - name: Test with pytest
      run: |
        uv run pytest --doctest-modules src

    - name: Create zipapp with shiv
      run: |
        uv pip compile pyproject.toml -o requirements.txt
        uv run shiv -c noseyparker-explorer -o noseyparker-explorer --compile-pyc --python '#!/usr/bin/env python${{ matrix.python-version }}' -- -c requirements.txt .

    - name: Get version
      id: package-metadata
      run: |
          echo "version=$(uv run noseyparker-explorer --version | cut -d ' ' -f 2)" >> "$GITHUB_OUTPUT"

    - name: Upload zipapp
      uses: actions/upload-artifact@v4
      with:
        name: noseyparker-explorer-${{ steps.package-metadata.outputs.version }}-python${{ matrix.python-version }}-${{ matrix.job.name }}
        path: noseyparker-explorer
